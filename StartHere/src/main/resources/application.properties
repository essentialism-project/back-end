server.port=${PORT:2019}
# server.servlet.context-path=/apis

## Begin h2 configuration
#spring.h2.console.enabled=true
#spring.h2.console.path=/h2-console
#spring.h2.console.settings.web-allow-others=true
# End h2 configuration


# Begin PostgreSQL local configuration
spring.datasource.url=jdbc:postgresql://localhost:5433/dbstarthere
spring.datasource.username=postgres
spring.datasource.password=password
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
# End PostgreSQL local configuration

# Begin PostgreSQL heroku configuration
# heroku config -a jrmmba-essentialism
# postgres://rrwzjxlkniayov:83e8dc9dc5a3c3a30e40dde8fb62941da11030b3953709f5c8f808690e776c71@ec2-54-243-241-62.compute-1.amazonaws.com:5432/d7bl8dlv2l83jj
# posgress://username      :password                                                        @url                                      :5432/dbname
# check environment variables:
#      heroku run echo \$SPRING_DATASOURCE_URL -a jrmmba-essentialism
#      heroku run echo \$SPRING_DATASOURCE_USERNAME -a jrmmba-essentialism
#      heroku run echo \$SPRING_DATASOURCE_PASSWORD -a jrmmba-essentialism
## If you environment variables get set, just use those!
#spring.datasource.url=${SPRING_DATASOURCE_URL}
#spring.datasource.username=${SPRING_DATASOURCE_USERNAME}
#spring.datasource.password=${SPRING_DATASOURCE_PASSWORD}
#spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
## If your environment variables do not get set
#DATABASE_URL: postgres://ztukeavfelzbya:8f089d91e8987b1db6121784bb0b7ba3a8c3bbb232daaed88604e83f08edf819@ec2-54-227-251-33.compute-1.amazonaws.com:5432/df41qidrqj2kbo
#spring.datasource.url=${SPRING_DATASOURCE_URL:jdbc:postgresql://ec2-54-227-251-33.compute-1.amazonaws.com:5432/df41qidrqj2kbo?user=ztukeavfelzbya&password=8f089d91e8987b1db6121784bb0b7ba3a8c3bbb232daaed88604e83f08edf819&sslmode=require}
#spring.datasource.username=${SPRING_DATASOURCE_USERNAME:ztukeavfelzbya}
#spring.datasource.password=${SPRING_DATASOURCE_PASSWORD:8f089d91e8987b1db6121784bb0b7ba3a8c3bbb232daaed88604e83f08edf819}
#spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
# End PostgreSQL heroku configuration


# What do with the schema
# drop n create table again, good for testing
spring.jpa.hibernate.ddl-auto=create
spring.datasource.initialization-mode=always

# Good for production!
#spring.jpa.hibernate.ddl-auto=update
#spring.datasource.initialization-mode=never


# Feature that determines what happens when no accessors are found for a type
# (and there are no annotations to indicate it is meant to be serialized).
spring.jackson.serialization.fail-on-empty-beans=false


# Turns off Spring Boot automatic exception handling
server.error.whitelabel.enabled=false


# needed for actuators to work
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always
management.endpoint.shutdown.enabled=true
